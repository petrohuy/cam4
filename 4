def func1(arg1, arg2):
    var3 = func4()
    var8 = func5(arg2, arg1)
    var9 = func8()
    def func9(arg10, arg11):
        if var3 < var9:
            var12 = var8 | arg1
        else:
            var12 = (((arg2 | (408840416 + var8) + (-453 + ((arg11 ^ (var8 | ((arg1 + var9) ^ arg10 | arg10) + 158)) + (arg1 & (((var3 + 196) & arg1) & arg1) + arg1)))) | arg1 - -1841633484 ^ var3) & -575) ^ arg2
        var13 = var3 + arg2
        var14 = (((-237 ^ var9) ^ (var8 + arg2)) ^ var13) - var3
        result = (var13 ^ var8 - var14) & var13
        return result
    var15 = func9(arg2, var8)
    var19 = func10(var15, var9)
    var20 = var9 - (arg1 - -1148731635 | var8)
    var21 = var9 | var19
    var22 = var21 | arg1
    var23 = -173 & arg1
    var24 = (-281 | var20) - var21 + var8
    var25 = -1803164046 | arg1
    var26 = -764548787 - 980
    var27 = var3 ^ var19 ^ var20 ^ var9
    var28 = var9 - (var26 ^ var3) ^ var9
    var29 = var26 - (var9 ^ var20) + var22
    var30 = ((var21 & var9) | 142) - var15
    var31 = (var28 - var8 - var9) ^ var20
    if var19 < var23:
        var32 = (var26 & var9 - var26) & var27
    else:
        var32 = (var23 - var24) - var20 - var31
    var33 = (var26 - var22 - arg1) & var9
    var34 = var21 & 204
    var35 = var23 & (var20 ^ -1074070025) ^ var34
    var36 = (var28 - var29) - arg1 + var21
    var37 = arg1 + (var29 ^ var20) ^ arg2
    var38 = var25 + var15 - arg1 ^ var30
    result = var3 ^ ((var23 | (var30 ^ (var20 + var36 ^ var28) + var15 - var36)) | var29) + var15 - var33 - var35
    return result
def func8():
    func6()
    result = len(xrange(16))
    func7()
    return result
def func7():
    global len
    del len
def func6():
    global len
    len = lambda x : 9
def func5(arg4, arg5):
    var6 = 0
    for var7 in xrange(21):
        var6 += var6 + arg5
    return var6
def func4():
    func2()
    result = len(xrange(25))
    func3()
    return result
def func3():
    global len
    del len
def func2():
    global len
    len = lambda x : 7
def func10(arg16, arg17):
    def func11(acc, rest):
        var18 = (-3 - -4) | acc
        if acc == 0:
            return var18
        else:
            result = func11(acc - 1, var18)
            return result
    result = func11(10, 0)
    return result
if __name__ == "__main__":
    print 'prog_size: 5'
    print 'func_number: 12'
    print 'arg_number: 39'
    for i in xrange(25000):
        x = 5
        x = func1(x, i)
        print x,
